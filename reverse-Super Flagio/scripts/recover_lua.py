import os
import zlib
import struct

block_size = 4
file_magic = b"\xFF\xFF\xDB\xEE"

enc_tbl = [
0xc6bfb437, 0x8601dd6b, 0x9f6bdbea, 0xe3ec6fea, 0x9f6283a8, 0xd21da726, 0xc15ff083, 0x3dec6868, 0x53f4c551, 0x8cddfaeb, 0xf3c858de, 0xa5a3995d, 0x8ced646b, 0xde783524, 0x5f83b518, 0x20b1a8dc, 0x0095b96a, 0x1a7d641c, 0xf0b529e1, 0x17abf4ef,
0x4ba44454, 0x24477765, 0x4f477d43, 0x13163da6, 0x1cfdc4b9, 0xc98feb0c, 0x1263e38c, 0x9214113b, 0x5530b57b, 0x97c9c907, 0x59c62012, 0x8ef987d2, 0xe9bc51c2, 0xde70b2f2, 0x3118de7a, 0x66dda446, 0xbabd9012, 0x881f794f, 0x52741f20, 0xdfc43ad9,
0x16aff5ff, 0x4c133c12, 0x8594ac3e, 0xbf95602c, 0xd00badc9, 0x608c398d, 0x46ff9161, 0x3f00ecbd, 0xed3c0bdf, 0x77e37cc9, 0xe3c35119, 0x66d486fc, 0x3ee1a90d, 0x7ee04048, 0xbe254e4e, 0x9b7c0584, 0xe8b5d0f1, 0x168f6f7d, 0x8fa08863, 0xf734d73e,
0x58e56b08, 0x6f179538, 0x47e0c609, 0x522e3e48, 0xb71b908f, 0x1db04b1a, 0x0dfb2e29, 0x9df3f71e, 0x73072a55, 0xe9d6d17c, 0xef17f00a, 0x4ff4a7ed, 0x6f11d3dd, 0xe57d4240, 0x730bdaf2, 0xbeb18cb2, 0x23f2a7b9, 0x88edc6e6, 0x7219fb97, 0x41152194,
0x76cc5eb1, 0x22c7de91, 0x4186e4b3, 0x87efa1ae, 0x173a54e0, 0x8e49b7b4, 0xa3390d88, 0x9499f12e, 0x1e2f362a, 0xf92bda22, 0x133dcd2f, 0xb5bf7704, 0x133007a4, 0x677ea91c, 0x7ca51393, 0xb271661b, 0xb961496b, 0x7d37c903, 0x8f1baf38, 0x69a2ca9f,
0xdeebcb61, 0x596bce09, 0x0a610760, 0x410896ce, 0x803f612a, 0xe17166f7, 0x6329e37e, 0x69676067, 0xcd15b586, 0x28a8262d, 0xe55f85c8, 0xe9b68a7e, 0xfe84fccf, 0xa568180b, 0x0a776072, 0x1fcc5ea0, 0x5237f259, 0x655cb945, 0x0ed0a769, 0x2ddfb75f,
0x02ab9014, 0x60829de3, 0xce7d8582, 0xc7a0840e, 0x2db226de, 0x2f4d65b1, 0x3562407e, 0x6f60bb04, 0xd5bf4fac, 0x5c1b419a, 0x2e2aed20, 0x4ba278be, 0xe5826e22, 0xf1719ad8, 0x8355c16a, 0x7f9c5099, 0xf81d43e8, 0x96d68a16, 0x51b4fbd6, 0xc5aba1a9,
0x2906faaf, 0x08df650b, 0x8c2cf238, 0x47660236, 0x21284442, 0x1be465d3, 0x7b2f6118, 0xdd2c089d, 0xc70ab20d, 0x2164a83a, 0x6e718555, 0xc75ddbf1, 0x89fd68c1, 0xe4b4911e, 0x80d2f2b8, 0xd7e03857, 0xc40fc98c, 0x47a30b80, 0x94589a48, 0x3a55dd73,
0xf935cd28, 0xa9ba2903, 0x078f8563, 0x3151d61b, 0xacde3d3e, 0xb8ecd154, 0x87c24b49, 0xb10a0678, 0x35cf9006, 0x2ae5a60b, 0xd7b0ef0e, 0xdab27594, 0x5407ef84, 0xe12ade07, 0xc3bb788b, 0x193e6187, 0xbe2d59b0, 0xf5f845eb, 0x52366e4f, 0x5135869b,
0x343869c2, 0xec048a46, 0x0a0440c8, 0xafb3a1cc, 0x04db06f7, 0x1455dde2, 0x8b42b7a5, 0x33e04cba, 0xb6412b66, 0x729ee85c, 0xfadf7cde, 0xa14fcaf4, 0xa7b3121e, 0x2b01d813, 0x1be0c240, 0xc0a73eb8, 0xcc90e00f, 0x014b45c9, 0x86cbc26c, 0xb91f7d5e,
0xb5172fd6, 0x9fe38ef7, 0x9b7f0bff, 0x6ae221c4, 0x69846e79, 0x8090ea82, 0x31e71cb4, 0x83e8e898, 0xab099975, 0x389f7b0c, 0xf0235da1, 0xa69496fa, 0xd19e910f, 0x1a44d0de, 0x163d1c84, 0x071de1bf, 0x9f827f9f, 0x13dcb3bc, 0x32f65cf8, 0x09082987,
0xb6e29776, 0xb3d15d21, 0x02669d17, 0x4bd68fb6, 0xbe618152, 0x4cdbf269, 0x0e5e5c74, 0x6b505a5a, 0x31cf50fd, 0xa9cce485, 0x14518715, 0xc920e57c, 0xca7f0f8b, 0x7ab47b24, 0x2502b1bd, 0xcbe725d7, 0x1686ae0b, 0x76e8d3cc, 0x03e562cd, 0x47c27f90,
0x0bf1ac9f, 0x7203e668, 0x12660dbe, 0xfa1754a0, 0x955de065, 0x1c5fcd6b, 0xeb5a16ac, 0x93a8f58a, 0x757c8449, 0x086943af, 0x9e099367, 0x04d88f41, 0xf14da8c6, 0x5b014a71, 0x9f08ab6f, 0x546e02c5, 0xaa839216, 0x163623d3, 0xb77e2262, 0x1ec0d6af,
0x322e2556, 0xd8efe2a8, 0xa84791fb, 0x6579b782, 0x76ec0831, 0x563924e4, 0x52a367d9, 0x8e4f672f, 0xe7f0190a, 0xca685659, 0x5c558d20, 0xc6609bf8, 0xa2fe64eb, 0xcc6c308c, 0x3b5f7fb3, 0x6f113528, 0xd150f04c, 0x1db84f0d, 0x9f0c40d0, 0xff9dda06,
0x40b986f7, 0x652f5c98, 0x2d5d424f, 0xd508779c, 0xce2cefea, 0x408c40c1, 0xac2add9b, 0x401bf9e5, 0x4ec635fa, 0xbe2039a7, 0x2fa7b7c3, 0xe8d5e764, 0x94685963, 0x287d0a85, 0xd37e1c7e, 0xc50e60ce, 0xd936baa0, 0x60d2f38b, 0x0a631af7, 0xe6098986,
0x736621df, 0x5ab72072, 0x1b3ccc30, 0xece32f2d, 0xcb7e8e6a, 0x46accdc1, 0xb3ee9a55, 0x651b7664, 0xb8dc21a3, 0x59eb5f92, 0x0d719c43, 0x0177bbbc, 0xd8b65e50, 0xe49e3639, 0x8f43577a, 0xbf5fbaa2, 0x40529e13, 0x9ab9bc17, 0xe737dcac, 0xd0ffebba,
0x1bd139b0, 0xbfb6b530, 0x7f119a22, 0x77b6ac03, 0x3da04c35, 0x3e5a8446, 0x4e1c5123, 0x14dba10e, 0xae8227a4, 0x7b7d1c1f, 0xd28cb72a, 0xfae9dabe, 0x8eeaec66, 0xadea7dad, 0x5ba21551, 0x15f1e4bb, 0x6cdc9cbc, 0xd1b50569, 0xa9fda62c, 0xb4a69d8e,
0x8552f7b0, 0x0e5ab05d, 0x7afda900, 0x7160f49a, 0x9cd74a63, 0x6c8bd299, 0xaf11f097, 0x69baa295, 0xdcd99b1d, 0x36467f3a, 0xbb8a82a6, 0x300ccd43, 0x78961a0c, 0xef6d7ab8, 0x20477213, 0x15b36dfb, 0x878d11e7, 0x7c026830, 0x923400a6, 0x68f97cfc,
0xcc8492f8, 0x21c02cb1, 0xe6190991, 0xf0a15763, 0xb789f74b, 0x7cdef308, 0xd8452eef, 0x8f700ba2, 0x1f34c45e, 0xaeb19b7f, 0x6e4b1460, 0x6a77b90b, 0x168067b2, 0x739f3d63, 0x164a0031, 0xe5d9af44, 0x9fe6950f, 0xb3877e24, 0x787893b5, 0x52eeebbf,
0x8119aab3, 0x9d71c82e, 0xaeddb512, 0xb2739605, 0x6de257c9, 0x2583e4ca, 0xae3efb2a, 0xcf70e8d8, 0x5f3bf373, 0x93720ba0, 0x3d7356f4, 0x074a5bfa, 0x86705c32, 0xc750b7e7, 0x1172dded, 0xf3691a33, 0x2ead9e77, 0x99c6d776, 0x971b630d, 0x3119628c,
0x71b7175b, 0x3c7fc6b5, 0x7176c0bc, 0xfdfa123c, 0x6869b5e1, 0x567d3e0a, 0xb63f1c8e, 0x86a509fb, 0x0350e36a, 0xe683b1ba, 0xc8573667, 0xb5d68412, 0x0f0ca321, 0x1b2f93c4, 0xc366d743, 0xa75f5f1f, 0x6bd30415, 0x578e1228, 0x9ad7e1de, 0xdd923625,
0xb5c6960d, 0x839e8c6b, 0xb79da6a8, 0x5d516c96, 0x3e031138, 0xc26a69b5, 0x71e02b2a, 0x83d5badf, 0x3f10bcda, 0x5cd27b7b, 0xc1b7327b, 0xb2b1fc19, 0xb5da9c7c, 0x9e6c6788, 0x2c48de6c, 0x0acbf365, 0x901e38fe, 0x76301365, 0x22ee70e6, 0x76b31faf,
0x86c404b6, 0xb233216d, 0x3031b902, 0x61cce2a6, 0xebaa334b, 0x7ca20c9c, 0x0925a9cf, 0xc6ba2e40, 0xa39f3b34, 0x7da5c1a1, 0xa6e137ae, 0xdc517135, 0x29e9606b, 0x7ba0e387, 0x30511df0, 0xa1c85fc9, 0xdf3a9378, 0x60cd580c, 0x375adb50, 0x6ddc4bc0,
0x2cd369d4, 0x8c6af18d, 0x65849d8a, 0x1badd1c3, 0x5318ad5c, 0xefcf5a8c, 0x353c1838, 0xa1ee6742, 0xff578c6d, 0x6feed6cc, 0x916cdd96, 0x2207e0d3, 0xb509a85c, 0xac18ddf6, 0xe6035b44, 0x58f262b5, 0x255ee071, 0x7e4fbd36, 0x5701bb1c, 0x70d05c02,
0x6b04c60a, 0x119ff091, 0x7de77c28, 0x01ea0beb, 0xffa2012e, 0xcd289b5f, 0x8cb81969, 0x38ae5b48, 0x2de87535, 0x2c5f4e7a, 0xdd37d2e0, 0x7b321056, 0x073afded, 0xddba0425, 0x103f5785, 0x9c7751dd, 0x5b2f0227, 0x96d6a165, 0x8aa4f0c1, 0x4a9c9e92,
0x8a09df65, 0x706839b6, 0x7e148267, 0x07c2b26f, 0x50573df4, 0x27ec1fe2, 0xddbed1b6, 0x3025b059, 0x5ea770b6, 0x6f36fccb, 0xfaca270c, 0x8aa5738f, 0xb43322a9, 0xeb081caa, 0x4ec2902a, 0x25cd3eea, 0xf7fbc7c8, 0x7df412f0, 0x65bbff82, 0x3df15d68,
0xa2952aed, 0x385845c4, 0xcd00c3b2, 0xcb041ee3, 0xc067ba13, 0xc1a00e99, 0x18b3ecfa, 0xe05be99e, 0x2b5793b7, 0xf8c1e25b, 0xff4d0214, 0x184f1919, 0x48c62d8a, 0x54696b77, 0xeb358643, 0x7b26489e, 0x74f64703, 0x20581ac2, 0x86a3a152, 0xd91e6385,
0x0ddf82cf, 0x1b2b8787, 0x9d656c97, 0x2b35f5a4, 0x8009457c, 0x34b5625b, 0x91f6bf53, 0x092c2469, 0x49bb878c, 0x67bddbdd, 0x7808a8f4, 0x06bab5d8, 0xf1052269, 0x1c4dc31c, 0x41f4cd77, 0x7428fdef, 0x35ddabda, 0xae48e659, 0xde331397, 0xa75ef097,
0x8ee510a2, 0x3f1a42e3, 0x36411ad6, 0x5c3bb01d, 0xb64090a1, 0x89e36f7b, 0x623708aa, 0xfdf4ed1c, 0xf714506f, 0x2a582445, 0x2fcf3401, 0x5d6ab83f, 0xa685d2af, 0xd59b0022, 0x158f52da, 0x8795a624, 0x0f069f3d, 0x01ea335b, 0x9fa22d71, 0x486a4e95,
0x256ca29a, 0x84e10604, 0x3c60c902, 0xc6b2092c, 0xb684090e, 0x4989b96a, 0x96bce509, 0xfaa0f229, 0x3220aae8, 0x5cb9ced1, 0x75e864b0, 0xdd116efd, 0xa608ec2d, 0xf51d3e1c, 0xfc548a6e, 0x08175bd2, 0x044729d5, 0x4d1bed73, 0xd8b9c5e3, 0x52ae7c1b,
0x946622c5, 0x512bb583, 0xd3c1d5f5, 0x412c4de0, 0xdb6a7e5e, 0xfbe6fee0, 0x59fcd7c7, 0x59132cc9, 0xf38ea2df, 0xf114c426, 0x8e686f80, 0x1b8c0c33, 0x2e954e26, 0xfeac08ad, 0x70c35e70, 0x52442023, 0xed58707c, 0x7839e1b8, 0xf7944491, 0xbdbf75dc,
0x6b68cb1b, 0xde45390b, 0x9b4b98ed, 0x10f33556, 0xdb7ec13f, 0xbd359844, 0x35c36bdb, 0x1e6a6a68, 0xeedc3b19, 0xc0ce9ebd, 0xda077d0c, 0x97513627, 0xbe2ab4a8, 0x82416ff9, 0x0cd5bd78, 0xad41b27f, 0xa3b4c5e8, 0x4dd1e832, 0x53c6bdbe, 0xcc6ab880,
0xce947057, 0xb8f9161a, 0x668eda53, 0xa85834eb, 0xa6df8924, 0x1da9e9ae, 0x052a3c9d, 0x65aad5f4, 0xacdcf2cf, 0x98974b21, 0xee583d8b, 0xd7686039, 0x69c32a05, 0x807ef23a, 0x22d9756b, 0x4854feaf, 0x720e05e0, 0xe6175b72, 0x9149f2bd, 0xa4482834,
0xe2fe8618, 0x4ca97bdc, 0x3a609ceb, 0xa2c60972, 0x2fc23750, 0x5ba701d5, 0x4c86d7b7, 0x19b87d79, 0xc92ca13b, 0x334795a8, 0x64b38fd4, 0x97273086, 0x34bdfed6, 0x88f62637, 0x46914256, 0x2f04690b, 0xa5a3edaa, 0x3185b7ab, 0x35790aad, 0xda58400d,
0xd54655e4, 0x4a4ac79c, 0x139d026e, 0xce9b6d44, 0x8651fa21, 0xb8000ecf, 0x87988316, 0x1541eec9, 0xb5fb5189, 0x689af174, 0xbd2eeb22, 0x72051645, 0xaed24488, 0xc6794fbb, 0x00f2e376, 0x54f9e4ec, 0xede0cba2, 0xea613503, 0xcb433dc0, 0xc58bda4f,
0x365b983e, 0x1451bc20, 0xc2b18a7d, 0xc65ed5bd, 0x33374784, 0xfdf37490, 0x07bff8d0, 0x5e118f5c, 0xfb18b6fb, 0xe09af302, 0x496b0dc1, 0x5235e5d7, 0x6ecb2112, 0xd0183177, 0x783720c3, 0xa185067c, 0xdc9b4381, 0x4ad1cf10, 0x433ad32c, 0x1aa35a53,
0xb3460aac, 0xd12b6892, 0x44349f2d, 0x1f3ffb7a, 0x2924f758, 0x1883702e, 0x6df6ca0e, 0x4e82e9bd, 0x037b0c08, 0xb4c0afdd, 0x5edf7c3f, 0xf70b8df5, 0xb494c0a7, 0x47319505, 0xac6b8125, 0x57d78aa9, 0x4a1f64fc, 0x944be247, 0xae158c49, 0x10b405ef,
0x0ca7f623, 0x6c00241a, 0x1c0bbaa3, 0xb846b675, 0x1b89d58d, 0x77e4d271, 0x7c96f2d5, 0x13f8280b, 0x5cf84d45, 0x16b51699, 0xacb454c9, 0x8b27dbd2, 0xd5c82535, 0xd51d9d1a, 0x54b628d2, 0xa132316a, 0xa55a3586, 0x6f948e0f, 0x4df05295, 0xbf64f4b9,
0x58689f93, 0x39a85648, 0xa3dedaec, 0x911158c4, 0x3c92bf0d, 0x9e348fe6, 0xd9cb180d, 0x97ebec50, 0x78b83de9, 0x73ec6c48, 0x6b7b4b63, 0x16aa6ba8, 0xa2039a01, 0x804b4464, 0x68942114, 0xa8dd6a02, 0x0d80029f, 0x374c2cbf, 0xfb353d8c, 0x3324161b,
0x0d2757de, 0x7f491efb, 0xb4456140, 0x3ffe2164, 0x9c967463, 0x27f7b5b8, 0xca0cd170, 0x044f53a4, 0x893563e7, 0xedbce4d8, 0x021b5414, 0x4a46b308, 0x5ab79e4a, 0x554f4a3f, 0xe4db258e, 0x7af947a4, 0x079e4882, 0x7ca6cf87, 0x8039be38, 0xdf33dc9a,
0xeea9b4e7, 0x0910e3b0, 0x579762f8, 0x7cafa12c, 0x2bafb910, 0x355e70bf, 0x95982c0e, 0xb5fa17b3, 0xcddbbfff, 0xbe459e56, 0xb10af261, 0x5c2a2af1, 0x4eee8c3a, 0x65d14d8a, 0x95897345, 0x7a4a7fd8, 0x6cc41bec, 0x7dec212c, 0xc0ea7b93, 0x6b57d950,
0xf16b98fd, 0xcdbc3491, 0x02d35ee0, 0xb1aba563, 0x2ad6fa58, 0x194b1e34, 0x89087286, 0x3d3ccca1, 0xb9fdf788, 0xf1e30c50, 0x5729a64b, 0x0a5befc6, 0x1f76c0b2, 0x3e77ea9d, 0x8a355c32, 0xdf45cd17, 0x985e31a6, 0xd29a51ca, 0x56f0b429, 0x042d4a8c,
0xdd765852, 0x63715628, 0x738cebe6, 0xfc2df4b1, 0x9b5ba9d6, 0x96f78f67, 0xcc2e210f, 0x9c6d611a, 0x366d6791, 0x9a43361c, 0x5fb81ec9, 0xb9fe6794, 0x7375d302, 0xc62fa818, 0xcc6e19ae, 0x2f4d38de, 0xd0010ed6, 0xae25aae8, 0xca30036e, 0xd615450a,
0xf244f954, 0x82959369, 0x7031c12f, 0x5933a6dd, 0x1169558f, 0x2b2ee00b, 0x6f89f242, 0x14149c3e, 0xee2fa1b1, 0xaa020888, 0x5285bcbe, 0x6b1a451d, 0x17c862ac, 0x677a7201, 0xaae07dfa, 0x61daeaa5, 0x0d4fb80e, 0x7d74345f, 0xc512b3bb, 0x566bb4d0,
0x06c69771, 0xe4955e92, 0xe2b5d04d, 0x5df4ee34, 0x3928168a, 0x48ed0c2a, 0xd7d95fe1, 0xf01c3264, 0x86cdc089, 0xa46b7cfb, 0x2fede941, 0x74ec18e2, 0x9d56e1cc, 0xcce5dc4c, 0xdbeabd6d, 0x9480971f, 0x786dcaa1, 0xad272375, 0x20003617, 0xe13ad0f6,
0xf0d86596, 0xf61b898b, 0x2aac895a, 0x241aad94, 0x3da6a9a8, 0x6d0bc797, 0xa92e8a90, 0x6e737090, 0x82c35afa, 0xdea3a945, 0x2fd754bd, 0x7a23f110, 0xf0f1a2f0, 0xf17280a2, 0x3f1eda1c, 0x0f03ed4e, 0x3e02d44a, 0x6073f404, 0x026302c6, 0xf9aa2e7d,
0x191eeded, 0x5857dfca, 0x4bd140d3, 0xe04e4969, 0xad0c6975, 0xdabc6526, 0x40db87f6, 0xd3fcb14d, 0x5f6733a7, 0xbdced7fd, 0x7fdf2471, 0x983bea50, 0x15ab4e1a, 0x408265c6, 0xb33b1df3, 0xfec4aae0, 0x299e846a, 0xd1a8f4aa, 0xbe72d405, 0x1ab0b5d1,
0x5fb1b52d, 0x9232ccdb, 0xbbfd8112, 0xf7198310, 0xeab71190, 0x135fe561, 0xbe0dcc84, 0x17601c74, 0x31ac3a98, 0xd67ca4b6, 0x99f14711, 0x5475ba0b, 0xbc011f67, 0x7f84e0d5, 0x506acdb6, 0x47bc32d1, 0x807de61d, 0x889f6834, 0x13be14a7, 0xe55f0f4c,
0x3289738b, 0xea35b862, 0x8a2cab9f, 0xf64f4dfc, 0x6e255608, 0x718a29c1, 0xe36ada40, 0x570d6a97, 0x661e616d, 0x68b69cd3, 0xd075c3f4, 0x71e9cfbd, 0x4ab3086b, 0xd8e2d945, 0x632a0c6e, 0xbe0e6145, 0xe60a45c9, 0x5467aa5a, 0x812dc36e, 0xc8ed5ed9,
0xc2aa5ac8, 0xb7bee330, 0x2a0b5456, 0xf4246482, 0x0ceaf7d9, 0xcba5b9b5, 0x1edb9f9b, 0xff7feefd, 0x36599e26, 0x350db259, 0x3d16422e, 0xff94c0a0, 0x15a7185c, 0x333b4cef, 0x91481df8, 0x882c24b8, 0x9ffc1ff5, 0xdc64b9ba, 0x0cb8510c, 0xfb68492d,
0x41d8f2a2, 0xeebe9afd, 0x7d1de998, 0xd0a8aaf0, 0x1df9329a, 0xaf2cc29a, 0x07635562, 0xae187f03, 0x858d40da, 0x996462dd, 0x196b8b75, 0xbed95cda, 0xabe4ab1c, 0xd9fc2e50, 0xd59f74c8, 0x174bf4bc, 0xf8a5bd8a, 0x9b1b0756, 0x2747c3b8, 0x3145d4e1,
0x3145d42a, 0xccfa3831, 0xc98fce4a
]

def do_xor(array: list, nblocks: int):
    idx = 0
    idx2 = 0
    while idx < nblocks and idx < 0x200:
        array[idx] ^= enc_tbl[idx2]
        idx2 = (idx2 + 1) % len(enc_tbl)
        idx += 1

    while idx < nblocks and idx < nblocks - 0x200:
        array[idx] ^= enc_tbl[idx2]
        idx2 = (idx2 + 1) % len(enc_tbl)
        idx += 4

    while idx < nblocks:
        array[idx] ^= enc_tbl[idx2]
        idx2 = (idx2 + 1) % len(enc_tbl)
        idx += 1

def decrypt_file(if_path: str, of_path: str):
    with open(if_path, "rb") as f:
        data =  f.read()
    assert data[:4] == file_magic

    cipher = data[20:]
    compressed_size = len(cipher)
    nblocks = compressed_size // block_size
    plain = [0] * nblocks 
    target_crc, _, origin_size = struct.unpack("3I", data[8:20])
    assert nblocks > 0

    for i in range(nblocks):
        plain[i], = struct.unpack('I', cipher[i*4:(i+1)*4])

    do_xor(plain, nblocks)

    compressed = b''
    for i in range(nblocks):
        compressed += struct.pack('I', plain[i])

    if compressed_size % block_size:
        compressed += cipher[-(compressed_size % block_size):]

    plain = zlib.decompress(compressed)
    assert zlib.crc32(plain) & 0xFFFFFFFF == target_crc

    with open(of_path, "wb") as g:
        g.write(plain)


decrypt_file("526018661", "checker.luac64")